[user]
	email = larrymayster@gmail.com
	name = LarryM
[diff]
[color]
    ui = auto
[alias]
    st = status
    ci = commit --verbose
    co = checkout
    di = diff
    dc = diff --cached
    amend = commit --amend
    aa = add --all
    ap = add --patch
    ai = add --interactive
    ff = merge --ff-only
    pullff = pull --ff-only
    noff = merge --no-ff
    fa = fetch --all
    pom = push origin master
    b = branch
    ds = diff --stat=160,120
    dh1 = diff HEAD~1

    # Divergence (commits we added and commits remote added)
    div = divergence

    # Goodness (summary of diff lines added/removed/total)
    gn = goodness
    gnc = goodness --cached

    # Fancy logging.
    #   h = head
    #   hp = head with patch
    #   r = recent commits, only current branch
    #   ra = recent commits, all reachable refs
    #   l = all commits, only current branch
    #   la = all commits, all reachable refs
    head = !git r -1
    h = !git head
    hp = "!. ~/.githelpers && show_git_head"
    r = !GIT_NO_PAGER=1 git l -30
    ra = !git r --all
    l = "!. ~/.githelpers && pretty_git_log"
    la = !git l --all

    # Pull Requests
    # git pr 4 - creates local branch pr/4 from the github upstream(if it exists) or origin remote and checks it out
    # git pr 4 someremote - creates local branch pr/4 from someremote remote and checks it out
    # git pr-clean - removes all pr/* branches from your local repo
    pr  = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
    pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"

[merge]
    tool = vimdiff
