set nocompatible              " be iMproved, required
filetype off                  " required

set shell=/bin/bash

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" " alternatively, pass a path where Vundle should install plugins
" "call vundle#begin('~/some/path/here')
"
" " let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
"
" " The following are examples of different formats supported.
" " Keep Plugin commands between vundle#begin/end.
" " plugin on GitHub repo
" Plugin 'tpope/vim-fugitive'
" " plugin from http://vim-scripts.org/vim/scripts.html
" " Plugin 'L9'
" " Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" " git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" " The sparkup vim script is in a subdirectory of this repo called vim.
" " Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" " Install L9 and avoid a Naming conflict if you've already installed a
" " different version somewhere else.
" " Plugin 'asceNator/L9', {'name': 'newL9'}

"Themes
Plugin 'sjl/badwolf'                 "theme

" Languages
Plugin 'python-mode/python-mode'      " python language
Plugin 'lukerandall/haskellmode-vim'  " haskell language
Plugin 'torrancew/vim-openscad'       " openscad language
Plugin 'rust-lang/rust.vim'           " rust language
Plugin 'phildawes/racer'              " use racer completions TODO
Plugin 'plasticboy/vim-markdown'      " markdown language
Plugin 'lambdatoast/elm.vim'          " elm language
Plugin 'LaTeX-Box-Team/LaTeX-Box'     " latex language
Plugin 'stfl/meson.vim'               " meson build system
Plugin 'lepture/vim-jinja'            " jinja templating

" editing
Plugin 'vim-scripts/YankRing.vim'     " cut and paste
Plugin 'sjl/gundo.vim'                " undo
Plugin 'tpope/vim-surround'           " parens and braces
Plugin 'tpope/vim-commentary'         " comment out lines
Plugin 'godlygeek/tabular'            " alignment TODO: learn bindings - http://vimcasts.org/episodes/aligning-text-with-tabular-vim/

" file navigation
Plugin 'ctrlpvim/ctrlp.vim'           " fuzzy find
Plugin 'ivalkeen/vim-ctrlp-tjump'     " jump to definition, or fuzzy narrow
Plugin 'scrooloose/nerdtree'          " file navigation
Plugin 'airblade/vim-rooter'          " root-directory

" integrations
Plugin 'tpope/vim-fugitive'           " git TODO
Plugin 'tpope/vim-unimpaired'         " TODO

" autocompletion
Plugin 'ludovicchabant/vim-gutentags' " auto ctags
Plugin 'tpope/vim-dispatch'           " make asynchronous calls, used by vim-tags

" " All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" " To ignore plugin indent changes, instead use:
" "filetype plugin on
" "
" " Brief help
" " :PluginList       - lists configured plugins
" " :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" " :PluginSearch foo - searches for foo; append `!` to refresh local cache
" " :PluginClean      - confirms removal of unused plugins; append `!` to
" auto-approve removal
" "
" " see :h vundle for more details or wiki for FAQ
" " Put your non-Plugin stuff after this line


"colors
set background=dark
set t_Co=256
colorscheme badwolf

"GUI, remove unneeded elements
set guioptions-=T 
set guioptions-=r
set guioptions-=R
set guioptions-=l
set guioptions-=L

"general usability
set nocompatible
set modelines=0
set encoding=utf-8
set scrolloff=3
set autoindent
set showmode
set showcmd
set hidden
set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set relativenumber
set number
set undofile
set autoread
set tildeop

"wildmenu
set wildmenu
set wildmode=list:longest
set wildignore+=.hg,.git,.svn
set wildignore+=*.jpg,*.bmp,*.png,*.jpeg
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest,*.elf
set wildignore+=*.sw?
set wildignore+=*.pyc

"backups
set undodir=~/.vim/tmp/undo//
set backupdir=~/.vim/tmp/backup//
set directory=~/.vim/tmp/swap//
set backup
set noswapfile


"leader
let mapleader=","
let maplocalleader="\\"

"fix search, map ,<space> to clear hl
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>
nnoremap <tab> %
vnoremap <tab> %

"setup tabs
set tabstop=2
set shiftwidth=2
set expandtab
nmap <Right> >>
nmap <Left>  <<
vmap <Right> >gv
vmap <Left>  <gv
nmap <Up> [e
nmap <Down> ]e
vmap <Up> [egv
vmap <Down> ]egv


"set line length
set wrap
set textwidth=79
set formatoptions=qrn1
set colorcolumn=85

"stop hitting F1
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

au FocusLost * :wa

"easier escape
inoremap jj <ESC>

"window splits:
nnoremap <leader>w <C-w>v<C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <leader><leader> <C-^>

"NERDtree
nnoremap <F2> :NERDTreeToggle<cr>
inoremap <F2> <esc>:NERDTreeToggle<cr>

let NERDTreeHighlightCursorline=1
let NERDTreeIgnore=['.vim$', '\~$', '.*\.pyc$']
"let NERDTreeMinimalUI=1
let NERDTreeDirArrows=1

"YankRing
nnoremap <silent> <F3> :YRShow<cr>
inoremap <silent> <F3> <ESC>:YRShow<cr>

"Gundo
nnoremap <F5> :GundoToggle<cr>

"CtrlP
nnoremap <C-p> :CtrlP<cr>
nnoremap <C-b> :CtrlPBuffer<cr>

"Markdown
let g:vim_markdown_folding_disabled = 1

"Commentary
nnoremap \\\ :Commentary<cr>
vnoremap \\\ :Commentary<cr>

"folds enable syntax folding and unfold all on entry
set fdm=syntax
autocmd Syntax * normal zR 

"Tags
let g:ctrlp_tjump_only_silent=1
nnoremap <leader>t :CtrlPtjump<cr>
vnoremap <leader>t :CtrlPtjumpVisual<cr>
nnoremap <leader>T :CtrlPTag<cr>
set omnifunc=syntaxcomplete#Complete
" inoremap <C-space><C-x><C-o>
inoremap <C-@><C-space>
